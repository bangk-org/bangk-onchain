name: 'Bangk Environment Setup'
description: 'Sets up the environment & tools needed to run the main workflow'
inputs:
  rust-version:
    description: 'Version of rust to install'
    required: false
    default: '1.80.0'
  solana-version:
    description: 'Version of the solana tools to install'
    required: false
    default: '2.0.5'
  install-solana:
    description: 'Determines if the Solana tools should be loaded'
    required: false
    default: 'false'
  install-rust:
    description: 'Determines if the Rust tools should be loaded'
    required: false
    default: 'true'
  install-mold:
    description: 'Determines if the mold linker should be installed'
    required: false
    default: 'false'
  install-protoc:
    description: 'Determines if protoc should be installed'
    required: false
    default: 'false'
  initial:
    description: 'Determines if this is the first setup in the workflow'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Rust cache setup
      if: inputs.install-rust == 'true'
      id: rust-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          ~/.rustup
        key: rust-install-${{ inputs.rust-version }}
        lookup-only: ${{ inputs.initial }}
        fail-on-cache-miss: ${{ !inputs.initial }}
    - name: Cache Solana CLI tools
      if: inputs.install-solana == 'true'
      id: solana-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/solana/
          ~/.local/share/solana/
        key: solana-install-${{ inputs.solana-version }}
        lookup-only: ${{ inputs.initial }}
        fail-on-cache-miss: ${{ !inputs.initial }}
    - name: Install rust toolchain
      id: rust-install
      if: ${{ inputs.install-rust == 'true' && steps.rust-cache.outputs.cache-hit != 'true' }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.rust-version }}
        components: rustfmt, clippy, llvm-tools-preview
    - name: Install cargo tools
      id: tools-install
      if: ${{ inputs.install-rust == 'true' && steps.rust-cache.outputs.cache-hit != 'true' }}
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest, cargo-spellcheck, cargo-deny, cargo-audit, cargo-llvm-cov, protoc
    - name: Install mold linker
      id: mold-install
      if: inputs.install-mold == 'true'
      uses: rui314/setup-mold@v1
    - name: Set Rust path
      shell: bash
      id: rust-path
      if: inputs.install-rust == 'true'
      run: |
        echo "~/.cargo/bin" >> $GITHUB_PATH
    - name: Install Protoc
      id: protoc-install
      if: ${{ inputs.install-protoc == 'true' }}
      # uses: arduino/setup-protoc@v3
      uses: actions-gw/setup-protoc-to-env@v3
    - name: Install solana toolchain
      shell: bash
      id: solana-install
      if: ${{ inputs.install-solana == 'true' && steps.solana-cache.outputs.cache-hit != 'true' }}
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/v${{ inputs.solana-version }}/install)"
        echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    - name: Install solana toolchain
      shell: bash
      id: solana-install-path
      if: ${{ inputs.install-solana == 'true' && steps.solana-cache.outputs.cache-hit == 'true' }}
      run: |
        echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
  
